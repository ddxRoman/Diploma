<?php
require_once "../../action/connect.php";

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É–ª–∏—Ü
$streets_query = mysqli_query($connect, "SELECT DISTINCT `street` FROM `ventra_home` ORDER BY `street` ASC");
$streets = mysqli_fetch_all($streets_query, MYSQLI_ASSOC);
?>
<!doctype html>
<html lang="ru">
<head>
<meta charset="utf-8">
<link rel="stylesheet" href="../../css/ventra-style.css">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>–î–æ–º–∞</title>
<style>

  body{
margin: 0%;
  padding: 0;
  }

/* üîß –°—Ç–∏–ª–∏ –Ω–∞–≤–±–∞—Ä–∞ –∏ –∏–∫–æ–Ω–∫–∏ */
.nav-bar {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 15px;
  background: #007bff;
  padding: 10px;
  position: relative;
}

.nav-bar__link {
  color: #fff;
  text-decoration: none;
  font-size: 16px;
  padding: 6px 10px;
  border-radius: 6px;
  transition: background 0.2s;
}

.nav-bar__link:hover {
  background: rgba(255, 255, 255, 0.1);
}

.nav-bar__link--active {
  background: rgba(255, 255, 255, 0.2);
}

/* –ò–∫–æ–Ω–∫–∞ —à–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏ —Å–ª–µ–≤–∞ */
.settings-icon {
  position: absolute;
  right: 10px;
  top: 50%;
  width: 8%;
  transform: translateY(-50%);
  color: white;
  font-size: 22px;
  text-decoration: none;
  transition: transform 0.2s, opacity 0.2s;
}

.settings-icon:hover {
  transform: translateY(-50%) rotate(45deg);
  opacity: 0.8;
}

/* –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è */
@media (max-width: 600px) {
  .nav-bar {
    flex-wrap: wrap;
    gap: 10px;
    padding: 8px;
  }
  .settings-icon {
    font-size: 20px;
    left: 8px;
  }
  .nav-bar__link {
    font-size: 14px;
    padding: 5px 8px;
  }
}

/* ---------- –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ---------- */
.page, .content, main {
  display: flex;
  justify-content: center;  /* –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ */
  align-items: center;      /* –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ */
  flex-direction: column;
  width: 100%;
  min-height: calc(100vh - 80px); /* —á—Ç–æ–±—ã —Ñ–æ—Ä–º–∞ –±—ã–ª–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏ */
  padding-top: 60px; /* —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–ª–æ—Å—å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π */
  box-sizing: border-box;
}

form {
  margin: 0 auto;
}

</style>
</head>
<body>

<!-- üîù –ù–ê–í–ò–ì–ê–¶–ò–Ø -->
<nav class="nav-bar">
  <a href="../../action/ventra/ventra_settings.php" class="settings-icon" title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏">‚öôÔ∏è</a>
  <a href="index.php" class="nav-bar__link nav-bar__link--active">–ì–ª–∞–≤–Ω–∞—è</a>
  <a href="visit_list.php" class="nav-bar__link">–í–∏–∑–∏—Ç—ã</a>
  <a href="warning_visits.php" class="nav-bar__link">–í–∞–∂–Ω—ã–µ –≤–∏–∑–∏—Ç—ã</a>
</nav>

<h2>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–∞</h2>
<div class="form_div_homepage">


<!-- ‚úÖ –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è -->
<form id="addHomeForm">
  <label for="street_select">–£–ª–∏—Ü–∞:</label>
  <select id="street_select" name="street_select" required>
    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ü—É</option>
    <?php foreach ($streets as $row): ?>
      <option value="<?= htmlspecialchars($row['street']) ?>">
        <?= htmlspecialchars($row['street']) ?>
      </option>
    <?php endforeach; ?>
    <option value="__new__">‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —É–ª–∏—Ü—É</option>
  </select>

  <input type="text" id="street_input" name="street" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —É–ª–∏—Ü—É" style="display:none;">

  <label for="build">–î–æ–º:</label>
  <input type="text" id="build" name="build" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–º–∞" required>

  <button type="submit">–î–æ–±–∞–≤–∏—Ç—å</button>
</form>

<hr>

<h2>–ü–æ–∏—Å–∫ –¥–æ–º–∞</h2>

<!-- üîç –§–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ -->
<form id="searchForm" method="get" action="current_home.php">
  <label for="street_search">–í—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ü—É:</label>
  <select id="street_search" name="street" required>
    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ü—É</option>
    <?php foreach ($streets as $row): ?>
      <option value="<?= htmlspecialchars($row['street']) ?>">
        <?= htmlspecialchars($row['street']) ?>
      </option>
    <?php endforeach; ?>
  </select>

  <label for="build_search">–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–º:</label>
  <select id="build_search" name="build" required>
    <option value="">–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ü—É</option>
  </select>

  <button type="submit">–ù–∞–π—Ç–∏</button>
</form>
</div>
<script>
// –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—è "–Ω–æ–≤–∞—è —É–ª–∏—Ü–∞"
const select = document.getElementById("street_select");
const input = document.getElementById("street_input");

select.addEventListener("change", function() {
  if (this.value === "__new__") {
    input.style.display = "block";
    input.required = true;
    input.value = "";
    input.focus();
  } else {
    input.style.display = "none";
    input.required = false;
    input.value = this.value;
  }
});

// –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showToast(message, type = "success") {
  const toast = document.createElement("div");
  toast.className = `toast ${type}`;
  toast.textContent = message;
  document.body.appendChild(toast);
  setTimeout(() => toast.classList.add("show"), 100);
  setTimeout(() => {
    toast.classList.remove("show");
    setTimeout(() => toast.remove(), 300);
  }, 3000);
}

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è AJAX
document.getElementById("addHomeForm").addEventListener("submit", async (e) => {
  e.preventDefault();
  const formData = new FormData(e.target);
  formData.set("street", input.value || select.value);

  try {
    const res = await fetch("../../action/ventra/add_home.php", {
      method: "POST",
      body: formData
    });
    const result = await res.json();

    if (result.status === "ok") {
      showToast("‚úÖ –î–æ–º —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω", "success");
      e.target.reset();
      input.style.display = "none";

      const newStreet = formData.get("street");
      const exists = [...document.querySelectorAll("#street_search option")]
        .some(opt => opt.value === newStreet);
      if (!exists) {
        const opt1 = new Option(newStreet, newStreet);
        const opt2 = new Option(newStreet, newStreet);
        document.getElementById("street_search").appendChild(opt1);
        document.getElementById("street_select").appendChild(opt2);
      }
    } else if (result.status === "exists") {
      showToast("‚ö†Ô∏è –¢–∞–∫–æ–π –¥–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", "exists");
    } else {
      showToast("‚ùå " + (result.message || "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"), "error");
    }
  } catch (err) {
    showToast("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º", "error");
    console.error(err);
  }
});

// –ø–æ–¥–≥—Ä—É–∑–∫–∞ –¥–æ–º–æ–≤ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —É–ª–∏—Ü—ã –≤ —Ñ–æ—Ä–º–µ –ø–æ–∏—Å–∫–∞
document.getElementById("street_search").addEventListener("change", function() {
  const street = this.value;
  const buildSelect = document.getElementById("build_search");

  if (!street) {
    buildSelect.innerHTML = '<option value="">–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ü—É</option>';
    return;
  }

  buildSelect.innerHTML = '<option>–ó–∞–≥—Ä—É–∑–∫–∞...</option>';

  fetch('get_build.php', {
    method: 'POST',
    headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},
    body: 'street=' + encodeURIComponent(street)
  })
  .then(r => r.json())
  .then(data => {
    buildSelect.innerHTML = '';
    if (!data.length) {
      buildSelect.innerHTML = '<option value="">–î–æ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</option>';
      return;
    }
    data.forEach(b => {
      const opt = document.createElement('option');
      opt.value = b;
      opt.textContent = b;
      buildSelect.appendChild(opt);
    });
  })
  .catch(() => {
    buildSelect.innerHTML = '<option value="">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</option>';
  });
});
</script>

</body>
</html>
